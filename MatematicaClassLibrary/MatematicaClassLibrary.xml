<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MatematicaClassLibrary</name>
    </assembly>
    <members>
        <member name="T:MatematicaClassLibrary.Matematica">
            <summary>
            The main <c>Math</c> class.
            Contains all methods for performing basic math functions.
            <list type="table">
            <item>
            <term>Add</term>
            <description>Addition Operation</description>
            </item>
            <item>
            <term>Subtract</term>
            <description>Subtraction Operation</description>
            </item>
            <item>
            <term>Multiply</term>
            <description>Multiplication Operation</description>
            </item>
            <item>
            <term>Divide</term>
            <description>Division Operation</description>
            </item>
            </list>
            </summary>
            <remarks>
            <para>This class can add, subtract, multiply and divide.</para>
            <para>These operations can be performed on both integers and doubles.</para>
            </remarks>
        </member>
        <member name="P:MatematicaClassLibrary.Matematica.PI_GRECO">
            <value>Ottiene il valore di Pi Greco.</value>
        </member>
        <member name="M:MatematicaClassLibrary.Matematica.Somma(System.Int32,System.Int32)">
            <summary>
            Somma due numeri interi e restituisce il risultato.
            </summary>
            <param name="a">Primo numero da sommare.</param>
            <param name="b">Secondo numero da sommare.</param>
            <returns>Restituisce la somma dei due numeri.</returns>
            <example>
            <code>
            int c = Matematica.Somma(4, 5);
            if (c > 10)
            {
                Console.WriteLine(c);
            }
            </code>
            </example>
            <exception cref="T:System.OverflowException">Thrown when one parameter is max 
            and the other is greater than 0.</exception>
            See <see cref="M:MatematicaClassLibrary.Matematica.Somma(System.Double,System.Double)"/> to add doubles.
            <seealso cref="M:MatematicaClassLibrary.Matematica.Sottrazione(System.Int32,System.Int32)"/>
            <seealso cref="M:MatematicaClassLibrary.Matematica.Moltipicazione(System.Int32,System.Int32)"/>
            <seealso cref="M:MatematicaClassLibrary.Matematica.Divisione(System.Int32,System.Int32)"/>
        </member>
        <member name="M:MatematicaClassLibrary.Matematica.Somma(System.Double,System.Double)">
            <summary>
            Adds two doubles <paramref name="a"/> and <paramref name="b"/> and returns the result.
            </summary>
            <returns>
            The sum of two doubles.
            </returns>
            <exception cref="T:System.OverflowException">Thrown when one parameter is max 
            and the other is greater than zero.</exception>
            See <see cref="M:MatematicaClassLibrary.Matematica.Somma(System.Int32,System.Int32)"/> to add integers.
        </member>
        <member name="M:MatematicaClassLibrary.Matematica.Divisione(System.Int32,System.Int32)">
            <summary>
            Divides an integer by another and returns the result.
            </summary>
            <returns>
            The division of two integers.
            </returns>
            <exception cref="T:System.DivideByZeroException">Thrown when a division by zero occurs.</exception>
        </member>
        <member name="M:MatematicaClassLibrary.Matematica.Divisione(System.Double,System.Double)">
            <summary>
            Divides an double by another and returns the result.
            </summary>
            <returns>
            The division of two double.
            </returns>
            <exception cref="T:System.DivideByZeroException">Thrown when a division by zero occurs.</exception>
        </member>
        <member name="M:MatematicaClassLibrary.Matematica.GreaterThan``1(``0,``0)">
            <summary>
            Checks if an IComparable is greater than another.
            </summary>
            <typeparam name="T">A type that inherits from the IComparable interface.</typeparam>
        </member>
        <member name="T:MatematicaClassLibrary.Math">
            <summary>
        The main <c>Math</c> class.
        Contains all methods for performing basic math functions.
      </summary><remarks>
        <para>This class can add, subtract, multiply and divide.</para>
        <para>These operations can be performed on both integers and doubles.</para>
      </remarks>
        </member>
        <member name="M:MatematicaClassLibrary.Math.Add(System.Int32,System.Int32)">
            <summary>
        Adds two integers <paramref name="a" /> and <paramref name="b" /> and returns the result.
      </summary><returns>
        The sum of two integers.
      </returns><example>
        <code>
          int c = Math.Add(4, 5);
          if (c &gt; 10)
          {
          Console.WriteLine(c);
          }
        </code>
      </example><exception cref="T:System.OverflowException">
        Thrown when one parameter is max
        and the other is greater than 0.
      </exception><see cref="M:MatematicaClassLibrary.Math.Add(System.Double,System.Double)" /><seealso cref="M:MatematicaClassLibrary.Math.Subtract(System.Int32,System.Int32)" /><seealso cref="M:MatematicaClassLibrary.Math.Multiply(System.Int32,System.Int32)" /><seealso cref="M:MatematicaClassLibrary.Math.Divide(System.Int32,System.Int32)" /><param name="a">An integer.</param><param name="b">An integer.</param>
        </member>
        <member name="M:MatematicaClassLibrary.Math.Add(System.Double,System.Double)">
            <summary>
        Adds two doubles <paramref name="a" /> and <paramref name="b" /> and returns the result.
      </summary><returns>
        The sum of two doubles.
      </returns><example>
        <code>
          double c = Math.Add(4.5, 5.4);
          if (c &gt; 10)
          {
          Console.WriteLine(c);
          }
        </code>
      </example><exception cref="T:System.OverflowException">
        Thrown when one parameter is max
        and the other is greater than 0.
      </exception><see cref="M:MatematicaClassLibrary.Math.Add(System.Int32,System.Int32)" /><seealso cref="M:MatematicaClassLibrary.Math.Subtract(System.Double,System.Double)" /><seealso cref="M:MatematicaClassLibrary.Math.Multiply(System.Double,System.Double)" /><seealso cref="M:MatematicaClassLibrary.Math.Divide(System.Double,System.Double)" /><param name="a">A double precision number.</param><param name="b">A double precision number.</param>
        </member>
        <member name="M:MatematicaClassLibrary.Math.Subtract(System.Int32,System.Int32)">
            <summary>
        Subtracts <paramref name="b" /> from <paramref name="a" /> and returns the result.
      </summary><returns>
        The difference between two integers.
      </returns><example>
        <code>
          int c = Math.Subtract(4, 5);
          if (c &gt; 1)
          {
          Console.WriteLine(c);
          }
        </code>
      </example><see cref="M:MatematicaClassLibrary.Math.Subtract(System.Double,System.Double)" /><seealso cref="M:MatematicaClassLibrary.Math.Add(System.Int32,System.Int32)" /><seealso cref="M:MatematicaClassLibrary.Math.Multiply(System.Int32,System.Int32)" /><seealso cref="M:MatematicaClassLibrary.Math.Divide(System.Int32,System.Int32)" /><param name="a">An integer.</param><param name="b">An integer.</param>
        </member>
        <member name="M:MatematicaClassLibrary.Math.Subtract(System.Double,System.Double)">
            <summary>
        Subtracts a double <paramref name="b" /> from another double <paramref name="a" /> and returns the result.
      </summary><returns>
        The difference between two doubles.
      </returns><example>
        <code>
          double c = Math.Subtract(4.5, 5.4);
          if (c &gt; 1)
          {
          Console.WriteLine(c);
          }
        </code>
      </example><see cref="M:MatematicaClassLibrary.Math.Subtract(System.Int32,System.Int32)" /><seealso cref="M:MatematicaClassLibrary.Math.Add(System.Double,System.Double)" /><seealso cref="M:MatematicaClassLibrary.Math.Multiply(System.Double,System.Double)" /><seealso cref="M:MatematicaClassLibrary.Math.Divide(System.Double,System.Double)" /><param name="a">A double precision number.</param><param name="b">A double precision number.</param>
        </member>
        <member name="M:MatematicaClassLibrary.Math.Multiply(System.Int32,System.Int32)">
            <summary>
        Multiplies two integers <paramref name="a" /> and <paramref name="b" /> and returns the result.
      </summary><returns>
        The product of two integers.
      </returns><example>
        <code>
          int c = Math.Multiply(4, 5);
          if (c &gt; 100)
          {
          Console.WriteLine(c);
          }
        </code>
      </example><see cref="M:MatematicaClassLibrary.Math.Multiply(System.Double,System.Double)" /><seealso cref="M:MatematicaClassLibrary.Math.Add(System.Int32,System.Int32)" /><seealso cref="M:MatematicaClassLibrary.Math.Subtract(System.Int32,System.Int32)" /><seealso cref="M:MatematicaClassLibrary.Math.Divide(System.Int32,System.Int32)" /><param name="a">An integer.</param><param name="b">An integer.</param>
        </member>
        <member name="M:MatematicaClassLibrary.Math.Multiply(System.Double,System.Double)">
            <summary>
        Multiplies two doubles <paramref name="a" /> and <paramref name="b" /> and returns the result.
      </summary><returns>
        The product of two doubles.
      </returns><example>
        <code>
          double c = Math.Multiply(4.5, 5.4);
          if (c &gt; 100.0)
          {
          Console.WriteLine(c);
          }
        </code>
      </example><see cref="M:MatematicaClassLibrary.Math.Multiply(System.Int32,System.Int32)" /><seealso cref="M:MatematicaClassLibrary.Math.Add(System.Double,System.Double)" /><seealso cref="M:MatematicaClassLibrary.Math.Subtract(System.Double,System.Double)" /><seealso cref="M:MatematicaClassLibrary.Math.Divide(System.Double,System.Double)" /><param name="a">A double precision number.</param><param name="b">A double precision number.</param>
        </member>
        <member name="M:MatematicaClassLibrary.Math.Divide(System.Int32,System.Int32)">
            <summary>
        Divides an integer <paramref name="a" /> by another integer <paramref name="b" /> and returns the result.
      </summary><returns>
        The quotient of two integers.
      </returns><example>
        <code>
          int c = Math.Divide(4, 5);
          if (c &gt; 1)
          {
          Console.WriteLine(c);
          }
        </code>
      </example><exception cref="T:System.DivideByZeroException">
        Thrown when <paramref name="b" /> is equal to 0.
      </exception><see cref="M:MatematicaClassLibrary.Math.Divide(System.Double,System.Double)" /><seealso cref="M:MatematicaClassLibrary.Math.Add(System.Int32,System.Int32)" /><seealso cref="M:MatematicaClassLibrary.Math.Subtract(System.Int32,System.Int32)" /><seealso cref="M:MatematicaClassLibrary.Math.Multiply(System.Int32,System.Int32)" /><param name="a">An integer dividend.</param><param name="b">An integer divisor.</param>
        </member>
        <member name="M:MatematicaClassLibrary.Math.Divide(System.Double,System.Double)">
            <summary>
        Divides a double <paramref name="a" /> by another double <paramref name="b" /> and returns the result.
      </summary><returns>
        The quotient of two doubles.
      </returns><example>
        <code>
          double c = Math.Divide(4.5, 5.4);
          if (c &gt; 1.0)
          {
          Console.WriteLine(c);
          }
        </code>
      </example><exception cref="T:System.DivideByZeroException">
        Thrown when <paramref name="b" /> is equal to 0.
      </exception><see cref="M:MatematicaClassLibrary.Math.Divide(System.Int32,System.Int32)" /><seealso cref="M:MatematicaClassLibrary.Math.Add(System.Double,System.Double)" /><seealso cref="M:MatematicaClassLibrary.Math.Subtract(System.Double,System.Double)" /><seealso cref="M:MatematicaClassLibrary.Math.Multiply(System.Double,System.Double)" /><param name="a">A double precision dividend.</param><param name="b">A double precision divisor.</param>
        </member>
    </members>
</doc>
